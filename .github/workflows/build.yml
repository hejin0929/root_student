name: note build
# 触发workflow的条件
on:
    push:
        # 只有master分支发生push事件时，才会触发workflow
        branches: [admin]
    pull_request:
        branches: [admin]

env:
    SERVER_PRIVATE_KEY: ${{ secrets.KEY }} # 服务器私钥
    SERVER_HOST: ${{ secrets.SERVER_HOST }} # 服务器IP地址
    USER_NAME: ${{ secrets.NAME }} # 服务器用户名
    cache-name: note
    QN_ACCESSKEY: ${{ secrets.QN_ACCESSKEY }}
    QN_SECRETKEY: ${{ secrets.QN_SECRETKEY }}

# jobs表示执行的一项或多项任务
jobs:
    build: # 任务的job_id，具体名称自定义，这里build代表打包
        runs-on: ubuntu-latest # runs-on字段指定运行所需要的虚拟机环境。注意：这个是必填字段
        steps:
            - uses: actions/checkout@master

            - uses: actions/setup-node@v1
              with:
                  node-version: v14.17.0

            #缓存依赖
            - name: Cache nodemodules
              id: MyCacheStep
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            # 装依赖
            - name: Install
              if: steps.MyCacheStep.outputs.cache-hit != 'true'
              run: yarn



            # 打包
            - name: Build
              run: yarn build

            # # 上传资源到七牛
            # - name: Use qshell
            #   uses: foxundermoon/setup-qshell@v5
            #   with:
            #       version: '2.6.2'

            # - name: Qshell account
            #   run: qshell account ${{ env.QN_ACCESSKEY }} ${{ env.QN_SECRETKEY }} pure

            # - name: Upload source
            #   run: yarn cdn

            # 上传打包资源
            - name: Deploy
              uses: easingthemes/ssh-deploy@v2.0.7
              env:
                  SSH_PRIVATE_KEY: ${{ env.SERVER_PRIVATE_KEY }}
                  ARGS: '-avz --delete'
                  SOURCE: 'dist/production/index.html'
                  REMOTE_HOST: ${{ env.SERVER_HOST }}
                  REMOTE_USER: ${{ env.USER_NAME }}
                  TARGET: /dist # 服务器目标路径